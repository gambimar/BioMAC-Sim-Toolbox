# This is a basic workflow to help you get started with Actions

name: Doxygen Action

# Controls when the action will run. Triggers the workflow on push or pull request
# events but only for the master branch
on:
  push:
    branches: [ main ]
 
# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
    # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
    - uses: actions/checkout@v2
      
    - name: Install dependencies
      run: sudo apt-get update && sudo apt-get install -y wget graphviz
      shell: bash

    - name: Install Doxygen v1.9.6
      run: |
        transformed_version=1_9_6
        wget https://github.com/doxygen/doxygen/releases/download/Release_${transformed_version}/doxygen-1.9.6.linux.bin.tar.gz
        tar -xzf doxygen-1.9.6.linux.bin.tar.gz
        sudo mv doxygen-1.9.6/bin/doxygen /usr/local/bin/doxygen
      shell: bash

    - name: Generate Doxygen Documentation
      run: ./docs/Doxygen/build_docs.sh
      shell: bash
          
    #- name: Doxygen Action
    #  uses: DenverCoder1/doxygen-github-pages-action@v2.0.0
    #  with:
    #      github_token: ${{ secrets.GITHUB_TOKEN }}
    #      folder: ./docs/Doxygen/html
    #      config_file: ./docs/Doxygen/Doxyfile
    
    - name: Upload static files as artifact
      id: deployment
      uses: actions/upload-pages-artifact@v3 # or specific "vX.X.X" version tag for this action
      with:
        path: ./docs/Doxygen/html

    # Deployment job
  deploy:
    # Add a dependency to the build job
    needs: build

    # Grant GITHUB_TOKEN the permissions required to make a Pages deployment
    permissions:
      pages: write      # to deploy to Pages
      id-token: write   # to verify the deployment originates from an appropriate source

    # Deploy to the github-pages environment
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}

        # Specify runner + deployment step
    runs-on: ubuntu-latest
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4 # or specific "vX.X.X" version tag for this action
